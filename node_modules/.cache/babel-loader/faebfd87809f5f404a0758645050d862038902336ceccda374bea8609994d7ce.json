{"ast":null,"code":"var _jsxFileName = \"E:\\\\KSP Datathon 2024\\\\Prototype Phase (LEVEL 2)\\\\web2\\\\policeperformance\\\\src\\\\Slider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Slider.css';\nimport image1 from './img1.jpg'; // Import your images\nimport image2 from './img2.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = () => {\n  _s();\n  const images = [image1, image2]; // List of imported images\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(goToNextSlide, 3000); // Automatic slide change every 3 seconds\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\n  }, [currentImageIndex]);\n  const goToNextSlide = () => {\n    const newIndex = (currentImageIndex + 1) % images.length;\n    setCurrentImageIndex(newIndex);\n  };\n  const goToPrevSlide = () => {\n    const newIndex = (currentImageIndex - 1 + images.length) % images.length;\n    setCurrentImageIndex(newIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[currentImageIndex],\n      alt: `Slide ${currentImageIndex + 1}`,\n      className: \"slider-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPrevSlide,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextSlide,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"iwdYV/csWqs0gMEM0R8yiwCHnVs=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","useEffect","image1","image2","jsxDEV","_jsxDEV","Slider","_s","images","currentImageIndex","setCurrentImageIndex","intervalId","setInterval","goToNextSlide","clearInterval","newIndex","length","goToPrevSlide","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/KSP Datathon 2024/Prototype Phase (LEVEL 2)/web2/policeperformance/src/Slider.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Slider.css';\r\nimport image1 from './img1.jpg'; // Import your images\r\nimport image2 from './img2.jpg';\r\n\r\nconst Slider = () => {\r\n  const images = [image1, image2]; // List of imported images\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(goToNextSlide, 3000); // Automatic slide change every 3 seconds\r\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\r\n  }, [currentImageIndex]);\r\n\r\n  const goToNextSlide = () => {\r\n    const newIndex = (currentImageIndex + 1) % images.length;\r\n    setCurrentImageIndex(newIndex);\r\n  };\r\n\r\n  const goToPrevSlide = () => {\r\n    const newIndex = (currentImageIndex - 1 + images.length) % images.length;\r\n    setCurrentImageIndex(newIndex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider-container\">\r\n      <img src={images[currentImageIndex]} alt={`Slide ${currentImageIndex + 1}`} className=\"slider-image\" />\r\n      <div className=\"slider-controls\">\r\n        <button onClick={goToPrevSlide}>Prev</button>\r\n        <button onClick={goToNextSlide}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AACrB,OAAOC,MAAM,MAAM,YAAY,CAAC,CAAC;AACjC,OAAOC,MAAM,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,MAAM,GAAG,CAACN,MAAM,EAAEC,MAAM,CAAC,CAAC,CAAC;EACjC,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGC,WAAW,CAACC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;IACrD,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACF,iBAAiB,CAAC,CAAC;EAEvB,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAME,QAAQ,GAAG,CAACN,iBAAiB,GAAG,CAAC,IAAID,MAAM,CAACQ,MAAM;IACxDN,oBAAoB,CAACK,QAAQ,CAAC;EAChC,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMF,QAAQ,GAAG,CAACN,iBAAiB,GAAG,CAAC,GAAGD,MAAM,CAACQ,MAAM,IAAIR,MAAM,CAACQ,MAAM;IACxEN,oBAAoB,CAACK,QAAQ,CAAC;EAChC,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/Bd,OAAA;MAAKe,GAAG,EAAEZ,MAAM,CAACC,iBAAiB,CAAE;MAACY,GAAG,EAAG,SAAQZ,iBAAiB,GAAG,CAAE,EAAE;MAACS,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvGpB,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9Bd,OAAA;QAAQqB,OAAO,EAAET,aAAc;QAAAE,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7CpB,OAAA;QAAQqB,OAAO,EAAEb,aAAc;QAAAM,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5BID,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}