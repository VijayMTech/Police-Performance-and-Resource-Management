{"ast":null,"code":"var _jsxFileName = \"E:\\\\KSP Datathon 2024\\\\Prototype Phase (LEVEL 2)\\\\web2\\\\policeperformance\\\\src\\\\Slider.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './Slider.css';\n// import { FaArrowLeft, FaArrowRight } from 'react-icons/fa'; // Import arrow icons from React Icons\n// import image1 from './img1.jpg'; // Import your images\n// import image2 from './img2.jpg';\n// const Slider = () => {\n//   const images = [image1, image2]; // List of imported images\n//   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n//   const [isHovered, setIsHovered] = useState(false);\n\n//   useEffect(() => {\n//     const intervalId = setInterval(goToNextSlide, 5000); // Automatic slide change every 5 seconds\n//     return () => clearInterval(intervalId); // Cleanup the interval on component unmount\n//   }, [currentImageIndex]);\n\n//   const goToNextSlide = () => {\n//     const newIndex = (currentImageIndex + 1) % images.length;\n//     setCurrentImageIndex(newIndex);\n//   };\n\n//   const goToPrevSlide = () => {\n//     const newIndex = (currentImageIndex - 1 + images.length) % images.length;\n//     setCurrentImageIndex(newIndex);\n//   };\n\n//   return (\n//     <div className=\"slider-container\" onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\n//       <div className={`slider-frame ${isHovered ? 'hovered' : ''}`}>\n//         <img src={images[currentImageIndex]} alt={`Slide ${currentImageIndex + 1}`} className=\"slider-image\" />\n//       </div>\n//       <div className=\"slider-controls\">\n//         <button onClick={goToPrevSlide} className=\"slider-button prev\">\n//           <FaArrowLeft />\n//         </button>\n//         <button onClick={goToNextSlide} className=\"slider-button next\">\n//           <FaArrowRight />\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Slider;\nimport React, { useState, useEffect } from 'react';\nimport './Slider.css';\nimport image1 from './img1.jpg'; // Import your images\nimport image2 from './img2.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = () => {\n  _s();\n  const images = [image1, image2]; // List of imported images\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(goToNextSlide, 3000); // Automatic slide change every 3 seconds\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\n  }, [currentImageIndex]);\n  const goToNextSlide = () => {\n    const newIndex = (currentImageIndex + 1) % images.length;\n    setCurrentImageIndex(newIndex);\n  };\n  const goToPrevSlide = () => {\n    const newIndex = (currentImageIndex - 1 + images.length) % images.length;\n    setCurrentImageIndex(newIndex);\n  };\n  const handleDotClick = index => {\n    setCurrentImageIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-frame\",\n      style: {\n        transform: `translateX(-${currentImageIndex * 100}%)`\n      },\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Slide ${index + 1}`,\n        className: \"slider-image\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-dots\",\n      children: images.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDotClick(index),\n        className: `slider-dot ${index === currentImageIndex ? 'active' : ''}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"iwdYV/csWqs0gMEM0R8yiwCHnVs=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","useEffect","image1","image2","jsxDEV","_jsxDEV","Slider","_s","images","currentImageIndex","setCurrentImageIndex","intervalId","setInterval","goToNextSlide","clearInterval","newIndex","length","goToPrevSlide","handleDotClick","index","className","children","style","transform","map","image","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_","onClick","_c","$RefreshReg$"],"sources":["E:/KSP Datathon 2024/Prototype Phase (LEVEL 2)/web2/policeperformance/src/Slider.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './Slider.css';\r\n// import { FaArrowLeft, FaArrowRight } from 'react-icons/fa'; // Import arrow icons from React Icons\r\n// import image1 from './img1.jpg'; // Import your images\r\n// import image2 from './img2.jpg';\r\n// const Slider = () => {\r\n//   const images = [image1, image2]; // List of imported images\r\n//   const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n//   const [isHovered, setIsHovered] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const intervalId = setInterval(goToNextSlide, 5000); // Automatic slide change every 5 seconds\r\n//     return () => clearInterval(intervalId); // Cleanup the interval on component unmount\r\n//   }, [currentImageIndex]);\r\n\r\n//   const goToNextSlide = () => {\r\n//     const newIndex = (currentImageIndex + 1) % images.length;\r\n//     setCurrentImageIndex(newIndex);\r\n//   };\r\n\r\n//   const goToPrevSlide = () => {\r\n//     const newIndex = (currentImageIndex - 1 + images.length) % images.length;\r\n//     setCurrentImageIndex(newIndex);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"slider-container\" onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n//       <div className={`slider-frame ${isHovered ? 'hovered' : ''}`}>\r\n//         <img src={images[currentImageIndex]} alt={`Slide ${currentImageIndex + 1}`} className=\"slider-image\" />\r\n//       </div>\r\n//       <div className=\"slider-controls\">\r\n//         <button onClick={goToPrevSlide} className=\"slider-button prev\">\r\n//           <FaArrowLeft />\r\n//         </button>\r\n//         <button onClick={goToNextSlide} className=\"slider-button next\">\r\n//           <FaArrowRight />\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Slider;\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Slider.css';\r\nimport image1 from './img1.jpg'; // Import your images\r\nimport image2 from './img2.jpg';\r\n\r\nconst Slider = () => {\r\n  const images = [image1, image2]; // List of imported images\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(goToNextSlide, 3000); // Automatic slide change every 3 seconds\r\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\r\n  }, [currentImageIndex]);\r\n\r\n  const goToNextSlide = () => {\r\n    const newIndex = (currentImageIndex + 1) % images.length;\r\n    setCurrentImageIndex(newIndex);\r\n  };\r\n\r\n  const goToPrevSlide = () => {\r\n    const newIndex = (currentImageIndex - 1 + images.length) % images.length;\r\n    setCurrentImageIndex(newIndex);\r\n  };\r\n\r\n  const handleDotClick = (index) => {\r\n    setCurrentImageIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider-container\">\r\n      <div className=\"slider-frame\" style={{ transform: `translateX(-${currentImageIndex * 100}%)` }}>\r\n        {images.map((image, index) => (\r\n          <img key={index} src={image} alt={`Slide ${index + 1}`} className=\"slider-image\" />\r\n        ))}\r\n      </div>\r\n      <div className=\"slider-dots\">\r\n        {images.map((_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleDotClick(index)}\r\n            className={`slider-dot ${index === currentImageIndex ? 'active' : ''}`}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}